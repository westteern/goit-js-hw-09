{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAMMC,GAJiBF,EAAAG,OAAOC,KAAK,CACjCC,SAAU,eAGIC,SAASC,cAAc,UAEjCC,EAAc,GAyCpB,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtB,IAAIC,SAAQ,SAACC,EAASC,GACpC,IAAMC,EAAS,CACbb,SAAAK,EACAS,MAAAR,GAEEC,EACFI,EAAQE,GAERD,EAAOC,E,IAIRE,MAAK,SAAAC,G,IAAGhB,EAAQgB,EAARhB,SAAUc,EAAKE,EAALF,MACjBG,YACE,W,OAAMtB,EAAAG,OAAOoB,QAAQ,uBAAwCC,OAAfnB,EAAS,QAAYmB,OAANL,EAAM,M,GACjEA,E,IAGLM,OAAM,SAAAJ,G,IAAGhB,EAAQgB,EAARhB,SAAUc,EAAKE,EAALF,MAClBG,YACE,W,OAAMtB,EAAAG,OAAOuB,QAAQ,sBAAqCF,OAAfnB,EAAS,QAAYmB,OAANL,EAAM,M,GAChEA,E,IAGHQ,SAAQ,W,OAAMzB,EAAQ0B,O,IAjE3B1B,EAAQ2B,iBAAiB,SAGzB,SAAiBC,GACXC,OAAOD,EAAEE,OAAOC,OAAS,IAC3BjC,EAAAG,OAAOuB,QAAQ,gCACfI,EAAEE,OAAOC,MAAQ,KAKrB,SAAkBH,GAEhB,OADiBA,EAAEE,OAAOE,MAExB,IAAK,QACH1B,EAAYW,MAAQY,OAAOD,EAAEE,OAAOC,OACpC,MACF,IAAK,OACHzB,EAAY2B,KAAOJ,OAAOD,EAAEE,OAAOC,OACnC,MACF,IAAK,SACHzB,EAAY4B,OAASL,OAAOD,EAAEE,OAAOC,O,CAbzCI,CAASP,E,IAPX5B,EAAQ2B,iBAAiB,UAyBzB,SAAkBC,GAChBA,EAAEQ,iBAEF9B,EAAY+B,QAAU,EAGtB,IAFA,IAAIC,EAAchC,EAAYW,MAErBsB,EAAI,EAAGA,EAAIjC,EAAY4B,OAAQK,GAAK,EAC3ChC,EAAcD,EAAY+B,QAASC,GACnChC,EAAY+B,SAAW,EACvBC,GAAehC,EAAY2B,I","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst changeSettings = Notify.init({\n  position: 'center-top',\n});\n\nconst formRef = document.querySelector('.form');\n\nconst inputsValue = {};\n\nformRef.addEventListener('input', onInput);\nformRef.addEventListener('submit', onSubmit);\n\nfunction onInput(e) {\n  if (Number(e.target.value) < 0) {\n    Notify.failure('The value cannot be negative');\n    e.target.value = '';\n  }\n  getValue(e);\n}\n\nfunction getValue(e) {\n  let userTarget = e.target.name;\n  switch (userTarget) {\n    case 'delay':\n      inputsValue.delay = Number(e.target.value);\n      break;\n    case 'step':\n      inputsValue.step = Number(e.target.value);\n      break;\n    case 'amount':\n      inputsValue.amount = Number(e.target.value);\n      break;\n  }\n}\n\nfunction onSubmit(e) {\n  e.preventDefault();\n\n  inputsValue.positon = 1;\n  let submitDelay = inputsValue.delay;\n\n  for (let i = 0; i < inputsValue.amount; i += 1) {\n    createPromise(inputsValue.positon, submitDelay);\n    inputsValue.positon += 1;\n    submitDelay += inputsValue.step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    const result = {\n      position,\n      delay,\n    };\n    if (shouldResolve) {\n      resolve(result);\n    } else {\n      reject(result);\n    }\n  });\n  promise\n    .then(({ position, delay }) => {\n      setTimeout(\n        () => Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`),\n        delay\n      );\n    })\n    .catch(({ position, delay }) => {\n      setTimeout(\n        () => Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`),\n        delay\n      );\n    })\n    .finally(() => formRef.reset());\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$formRef","Notify","init","position","document","querySelector","$ce04d3a99e08e73b$var$inputsValue","$ce04d3a99e08e73b$var$createPromise","position1","delay1","shouldResolve","Math","random","Promise","resolve","reject","result","delay","then","param","setTimeout","success","concat","catch","failure","finally","reset","addEventListener","e","Number","target","value","name","step","amount","$ce04d3a99e08e73b$var$getValue","preventDefault","positon","submitDelay","i"],"version":3,"file":"03-promises.51c487a8.js.map"}